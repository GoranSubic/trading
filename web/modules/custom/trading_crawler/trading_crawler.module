<?php

/**
 * @file
 * Main module file of Trading Crawler.
 */

declare(strict_types = 1);

use Drupal\Core\Batch\BatchBuilder;
use Drupal\Core\Datetime\DrupalDateTime;
use Drupal\node\Entity\Node;
use Drupal\trading_crawler\BatchCoingGithubManager;
use Symfony\Component\DomCrawler\Crawler;

/**
 * Create Crypto Basic Info - Crypt Name and Crypto URL
 */
function _crawl_and_create_crypto_basic_info_nodes(): void {

  \Drupal::logger('trading_crawler_cron')->notice('1. In Crypto Basic Info crawl!!!'); 

  $html = file_get_contents("https://www.coingecko.com/");
  $crawler = new Crawler($html);
  $data = $crawler->filter('body table tr td:nth-of-type(3)');

  $c = 0;
  $str = '<table><tbody>';
  foreach ($data as $elHtml) {
    $c++;
    if ($c > 11) break;


    $crawlerSec = new Crawler($elHtml);
    $dataLink = $crawlerSec->filter('a:first-of-type')->extract(['_text', 'href']);
    $dataTicker = $crawlerSec->filter('span')->extract(['_text']);

    $coinName = trim($dataLink[0][0]);
    $coinUrl = 'https://www.coingecko.com' . trim($dataLink[0][1]);
    $coinTicker = trim($dataTicker[0]);

    // Check if already exists in database.
    $query = \Drupal::entityQuery('node')
      ->condition('type', 'crypto_basic_info');
    $query->condition('field_coin_ticker', $coinTicker);
    $nid = $query->execute();

    if (!empty($nid)) continue; // Skip if already in database.

    $basicInfo = Node::create([
      'type' => 'crypto_basic_info',
      'title' => $coinName,
      'field_coin_name' => $coinName,
      'field_coin_url' => $coinUrl,
      'field_coin_ticker' => $coinTicker,
      'field_note' => 'Created from cron.',
    ]);
    $basicInfo->save();
  }

}

/**
 * Implements hook_cron().
 */
function trading_crawler_cron() {

  $hour = date("H");

  \Drupal::logger('trading_crawler_cron')->notice('In cron execution!!! Hour is: ' . $hour); 

  switch ($hour) {
    case ($hour < 1):
      _crawl_and_create_crypto_basic_info_nodes();
      break;

    case ($hour > 1 && $hour < 2):
      _crawl_with_batch_builder_create_coing_github_repository_nodes();
      break;
  }
}

/**
 * Create Coin Github Repository node based on existing Crypto Basic Info node
 */
function _crawl_with_batch_builder_create_coing_github_repository_nodes() {
  $batchBuilder = (new BatchBuilder())
    ->setTitle(t('Coing_Github_Repository masive create/updates'))
    ->setFinishCallback([BatchCoingGithubManager::class, 'finishProcess'])
    ->addOperation([BatchCoingGithubManager::class, 'initOperation'], [
      ['limit' => 5]
    ])
    ->addOperation([BatchCoingGithubManager::class, 'createProcess'], [
      ['limit' => 5]
    ])
    ;

  batch_set($batchBuilder->toArray());
}
 